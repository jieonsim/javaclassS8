<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 데이터베이스 연동을 위한 환경설정(JDBC설정) -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/javaclass8?allowMultiQueries=true" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>
	
	<!--  MyBatis SessionFactory 설정 : setter를 이용한 주입-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
    	<property name="typeHandlers">
	    	<array>
	       		<bean class="org.apache.ibatis.type.EnumTypeHandler">
	            	<constructor-arg value="com.spring.javaclassS8.vo.event.EventVO$EventStatus" />
	        	</bean>
	        	<bean class="com.spring.javaclassS8.typehandler.EventCategoryTypeHandler" />
	    	</array>
		</property>
	</bean>
	
	<!-- SqlSessionTemplate 설정 : 생성자를 이용한 주입 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- mapper의 정보(SqlSessionFactory 객체의 실행된 결과)를 주입하기 위한 dao 객체의 위치를 설정 -->
	<mybatis-spring:scan base-package="com.spring.javaclassS8.dao"/>
	
	<!-- 메일 처리를 위한 Bean 등록하기 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="zieonsim@gmail.com" />
		<property name="password" value="gyuyslfelmmdrdct" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
	<!-- Transaction(트랜잭션) 처리를 위한 bean 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

</beans>