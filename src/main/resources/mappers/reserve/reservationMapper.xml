<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS8.dao.reserve.ReservationDAO">
    
    <!-- 경기 고유번호로 경기 정보 가져오기 -->
	<select id="getGameById" resultType="com.spring.javaclassS8.vo.sports.GameVO">
	    SELECT g.*, 
	           ht.teamName as homeTeamName, 
	           ht.shortName as homeTeamShortName,
	           at.teamName as awayTeamName, 
	           at.shortName as awayTeamShortName,
	           v.venueName
	    FROM games g
	    JOIN teams ht ON g.homeTeamId = ht.id
	    JOIN teams at ON g.awayTeamId = at.id
	    JOIN venues v ON g.venueId = v.id
	    WHERE g.id = #{gameId}
	</select>

	<!-- 경기 고유번호로 잔여 좌석 수 가져오기 -->
    <select id="getSeatInventoriesByGameId" resultType="com.spring.javaclassS8.vo.sports.SeatInventoryVO">
        SELECT si.*, s.seatName, s.seatColor
        FROM seat_inventory si
        JOIN seats s ON si.seatId = s.id
        WHERE si.gameId = #{gameId}
    </select>
    
    <!-- 스포츠 고유번호로 1회 예매 시 최대 구매 가능 티켓 수 가져오기 -->
    <select id="getMaxTicketsPerBooking" resultType="int">
	    SELECT maxTicketsPerBooking 
	    FROM sport_booking_policies 
	    WHERE sportId = #{sportId}
	</select>
	
	<!-- 좌석 고유번호로 좌석 정보 가져오기 -->
	<select id="getSeatById" resultType="com.spring.javaclassS8.vo.sports.SeatVO">
        SELECT * FROM seats WHERE id = #{seatId}
    </select>
    
    <!-- 좌석 고유번호로 요금 정보 가져오기 -->
    <select id="getPricesBySeatId" resultType="com.spring.javaclassS8.vo.sports.PriceVO">
        SELECT p.*, tt.category, tt.name as ticketTypeName, tt.description
        FROM prices p
        JOIN ticket_types tt ON p.ticketTypeId = tt.id
        WHERE p.seatId = #{seatId}
        ORDER BY tt.category, tt.id
    </select>
    
    <!-- 스포츠 고유번호로 예매 정책 정보 가져오기 -->
    <select id="getBookingPolicyBySportId" resultType="com.spring.javaclassS8.vo.sports.SportBookingPolicyVO">
    	SELECT * FROM sport_booking_policies WHERE sportId = #{sportId}
    </select>
    
	<!-- memberId로 해당 유저에 등록된 유효한 예매권 정보 가져오기 -->
	<select id="getValidAdvanceTicketsByMemberId" resultType="java.util.HashMap">
	    SELECT at.advanceTicketNumber, at.expiresAt, at.used
	    FROM advance_tickets at
	    JOIN registered_advance_tickets rat ON at.id = rat.advanceTicketId
	    WHERE rat.memberId = #{memberId}
	    AND at.expiresAt > NOW()
	    AND at.used = FALSE
	    ORDER BY at.expiresAt ASC
	</select>
</mapper>